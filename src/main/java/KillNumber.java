/*
 * Copyright (c) 2017, CipherGateway and/or its affiliates. All rights  reserved.
 *
 */

import java.math.BigDecimal;
import java.util.*;

/**
 * 题目描述
 * 给定一个十进制的正整数number，选择从里面去掉一部分数字，希望保留下来的数字组成的正整数最大。
 * 输入描述:
 * 输入为两行内容，第一行是正整数number，1 ≤ length(number) ≤ 1000。第二行是希望去掉的数字数量cnt 1 ≤ cnt < length(number)。
 * 输出描述:
 * 输出保留下来的结果。
 *
 * @author kyle
 */
public class KillNumber {

  public static List<Integer> deleteCnt(List<Integer> a, int cnt) {
    if (cnt == 0) {
      return a;
    }
    int len = a.size();
    int min = Integer.MAX_VALUE;
    for (int i = 0; i < a.size(); i++) {
      if (a.get(i) < min) {
        min = a.get(i);
      }
    }
    int lastPost = 0;
    for (int i = 0; i < a.size(); i++) {
      if (a.get(i) == min) {
        if (i + 1 < a.size() && a.get(i) < a.get(i + 1)) {
          a.remove(i);
          break;
        }
        lastPost = i;
      }
    }
    if (a.size() == len) {
      a.remove(lastPost);
    }
    return deleteCnt(a, cnt - 1);
  }

  public static boolean bigger(String a, String b) {
    return new BigDecimal(a).compareTo(new BigDecimal(b)) > 0;
  }

  public static List<Integer> deleteCntDy(LinkedList<Integer> a, int cnt) {
    String[][] table = new String[cnt][a.size()];
    table[0][0] = String.valueOf(a.get(0));
    for (int i = 1; i < a.size(); i++) {
      if (bigger(table[0][i - 1], String.valueOf(a.get(i)))) {
        table[0][i] = String.valueOf(a.get(i));
      } else {
        table[0][i] = table[0][i - 1];
      }

    }
    for (int i = 1; i < cnt; i++) {
      table[i][i] = table[i - 1][i - 1] + a.get(i);
      for (int j = i + 1; j < a.size(); j++) {
        String str = table[i - 1][j - 1] + a.get(j);
        if (bigger(table[i - 1][j], str)) {
          table[i][j] = table[i - 1][j];
        } else {
          table[i][j] = str;
        }
      }
    }
    StringBuilder sb = new StringBuilder(table[cnt - 1][a.size() - 1]);
    List<Integer> b = new LinkedList<>();
    while (sb.length() > 0) {
      if (a.peekFirst().intValue() == (sb.charAt(0) - '0')) {
        a.pollFirst();
        sb.deleteCharAt(0);
      } else {
        b.add(a.pollFirst());
      }
    }

    b.addAll(a);
    return b;
  }

  public static String delectCntChar(String str, int cnt) {
    StringBuilder sb = new StringBuilder(str);
    int i = 1;
    while (cnt > 0 && i < sb.length()) {
      if (sb.charAt(i) > str.charAt(i - 1)) {
        sb.deleteCharAt(i - 1);
        cnt--;
        i--;
      }

      i++;
    }
    while (cnt > 0) {
      cnt--;
      sb.deleteCharAt(sb.length() - 1);
    }
    return sb.toString();
  }

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    String str = scanner.next();
    int cnt = scanner.nextInt();
    System.out.println(delectCntChar(str, cnt));
//    LinkedList<Integer> l = new LinkedList<>();
//    for (int i = 0; i < str.length(); i++) {
//      l.add(str.charAt(i) - '0');
//    }
//    LinkedList<Integer> l2 = new LinkedList<>(l);
////    List<Integer> result = deleteCnt(l, cnt);
////    Iterator<Integer> iterator = result.iterator();
////    while (iterator.hasNext()) {
////      System.out.print(iterator.next());
////    }
//
//    List<Integer> result2 = deleteCntDy(l2, cnt);
//    Iterator<Integer> iterator = result2.iterator();
//    while (iterator.hasNext()) {
//      System.out.print(iterator.next());
//    }
  }
}
/*

 */